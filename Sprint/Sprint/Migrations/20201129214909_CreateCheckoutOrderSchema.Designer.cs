// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sprint.Data;

namespace Sprint.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201129214909_CreateCheckoutOrderSchema")]
    partial class CreateCheckoutOrderSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "ProviderKey", "LoginProvider");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Sprint.Models.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AddressId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnName("City")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Postal")
                        .IsRequired()
                        .HasColumnName("Postal")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnName("Province")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnName("Street")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("UserId")
                        .HasColumnName("UserId")
                        .HasColumnType("int");

                    b.HasKey("AddressId");

                    b.HasIndex("UserId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("Sprint.Models.CartGame", b =>
                {
                    b.Property<int>("CartGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CartGameId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddedOn")
                        .IsRequired()
                        .HasColumnName("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CartUserId")
                        .HasColumnName("UserId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnName("GameId")
                        .HasColumnType("int");

                    b.Property<int>("ReceivingUserId")
                        .HasColumnName("ReceivingUserId")
                        .HasColumnType("int");

                    b.HasKey("CartGameId");

                    b.HasIndex("GameId");

                    b.HasIndex("ReceivingUserId");

                    b.HasIndex("CartUserId", "ReceivingUserId", "GameId")
                        .IsUnique();

                    b.ToTable("CartGame");
                });

            modelBuilder.Entity("Sprint.Models.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GameId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasColumnName("Developer")
                        .HasColumnType("varchar(48)")
                        .HasMaxLength(48)
                        .IsUnicode(false);

                    b.Property<int>("GameTypeId")
                        .HasColumnName("GameTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(48)")
                        .HasMaxLength(48)
                        .IsUnicode(false);

                    b.Property<decimal>("RegularPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RegularPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.HasKey("GameId");

                    b.HasIndex("GameTypeId");

                    b.ToTable("Game");

                    b.HasData(
                        new
                        {
                            GameId = 1,
                            Developer = "SCS Software",
                            GameTypeId = 5,
                            Name = "Euro Truck Simulator 2",
                            RegularPrice = 21.99m
                        },
                        new
                        {
                            GameId = 2,
                            Developer = "EA Sports",
                            GameTypeId = 7,
                            Name = "Madden NFL 20",
                            RegularPrice = 29.99m
                        },
                        new
                        {
                            GameId = 3,
                            Developer = "Klei Entertainment",
                            GameTypeId = 3,
                            Name = "Don't Starve",
                            RegularPrice = 11.49m
                        },
                        new
                        {
                            GameId = 4,
                            Developer = "2K Games",
                            GameTypeId = 1,
                            Name = "Borderlands 3",
                            RegularPrice = 79.99m
                        },
                        new
                        {
                            GameId = 5,
                            Developer = "Crystal Dynamics",
                            GameTypeId = 2,
                            Name = "Tomb Raider",
                            RegularPrice = 19.99m
                        },
                        new
                        {
                            GameId = 6,
                            Developer = "Bethesda",
                            GameTypeId = 4,
                            Name = "Fallout: New Vegas",
                            RegularPrice = 10.99m
                        },
                        new
                        {
                            GameId = 7,
                            Developer = "Spiderling Studios",
                            GameTypeId = 5,
                            Name = "Besiege",
                            RegularPrice = 17.49m
                        },
                        new
                        {
                            GameId = 8,
                            Developer = "Squad",
                            GameTypeId = 5,
                            Name = "Kerbal Space Program",
                            RegularPrice = 43.99m
                        },
                        new
                        {
                            GameId = 9,
                            Developer = "Electronic Arts",
                            GameTypeId = 4,
                            Name = "Dragon Age: Origins",
                            RegularPrice = 26.99m
                        },
                        new
                        {
                            GameId = 10,
                            Developer = "Ubisoft",
                            GameTypeId = 2,
                            Name = "Far Cry 3",
                            RegularPrice = 39.99m
                        },
                        new
                        {
                            GameId = 11,
                            Developer = "Ubisoft",
                            GameTypeId = 2,
                            Name = "Far Cry 3 - Blood Dragon",
                            RegularPrice = 14.99m
                        },
                        new
                        {
                            GameId = 12,
                            Developer = "Mojang",
                            GameTypeId = 9,
                            Name = "Minecraft",
                            RegularPrice = 26.95m
                        },
                        new
                        {
                            GameId = 13,
                            Developer = "Roblox Corporation",
                            GameTypeId = 9,
                            Name = "Roblox",
                            RegularPrice = 0.0m
                        },
                        new
                        {
                            GameId = 14,
                            Developer = "Nintendo",
                            GameTypeId = 1,
                            Name = "Super Mario Odyssey",
                            RegularPrice = 59.99m
                        },
                        new
                        {
                            GameId = 15,
                            Developer = "Rockstar Games",
                            GameTypeId = 2,
                            Name = "Grand Theft Auto V",
                            RegularPrice = 29.99m
                        },
                        new
                        {
                            GameId = 16,
                            Developer = "Monomi Park",
                            GameTypeId = 2,
                            Name = "Slime Rancher",
                            RegularPrice = 21.99m
                        },
                        new
                        {
                            GameId = 17,
                            Developer = "Psyonix",
                            GameTypeId = 1,
                            Name = "Rocket League",
                            RegularPrice = 35.99m
                        },
                        new
                        {
                            GameId = 18,
                            Developer = "NetherRealm Studios",
                            GameTypeId = 1,
                            Name = "Mortal Kombat 11",
                            RegularPrice = 69.99m
                        },
                        new
                        {
                            GameId = 19,
                            Developer = "Nintendo",
                            GameTypeId = 2,
                            Name = "The Legend of Zelda: Breath of the Wild",
                            RegularPrice = 79.99m
                        },
                        new
                        {
                            GameId = 20,
                            Developer = "Activision",
                            GameTypeId = 1,
                            Name = "Call of Duty: Black Ops 4",
                            RegularPrice = 79.99m
                        },
                        new
                        {
                            GameId = 21,
                            Developer = "Bungie",
                            GameTypeId = 8,
                            Name = "Destiny 2",
                            RegularPrice = 0m
                        },
                        new
                        {
                            GameId = 22,
                            Developer = "Zenimax Online Studios",
                            GameTypeId = 8,
                            Name = "The Elder Scrolls® Online",
                            RegularPrice = 0m
                        },
                        new
                        {
                            GameId = 23,
                            Developer = "Milestone",
                            GameTypeId = 7,
                            Name = "WRC 3: FIA World Rally Championship",
                            RegularPrice = 39.99m
                        },
                        new
                        {
                            GameId = 24,
                            Developer = "EA Black Box",
                            GameTypeId = 7,
                            Name = "Need for Speed: Carbon",
                            RegularPrice = 19.99m
                        },
                        new
                        {
                            GameId = 25,
                            Developer = "Haemimont Games",
                            GameTypeId = 6,
                            Name = "Tropico 5",
                            RegularPrice = 22.79m
                        },
                        new
                        {
                            GameId = 26,
                            Developer = "Innersloth",
                            GameTypeId = 5,
                            Name = "Among Us",
                            RegularPrice = 5.69m
                        },
                        new
                        {
                            GameId = 27,
                            Developer = "Rockstar Games",
                            GameTypeId = 2,
                            Name = "Red Dead Redemption II",
                            RegularPrice = 79.99m
                        },
                        new
                        {
                            GameId = 28,
                            Developer = "Firaxis Games",
                            GameTypeId = 6,
                            Name = "Sid Meier's Civilization VI",
                            RegularPrice = 79.99m
                        },
                        new
                        {
                            GameId = 29,
                            Developer = "Guerrilla",
                            GameTypeId = 2,
                            Name = "Horizon Zero Dawn",
                            RegularPrice = 59.99m
                        },
                        new
                        {
                            GameId = 30,
                            Developer = "Bethesda",
                            GameTypeId = 4,
                            Name = "Fallout 4",
                            RegularPrice = 39.99m
                        });
                });

            modelBuilder.Entity("Sprint.Models.GameDiscount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DiscountId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DiscountFinish")
                        .HasColumnName("DiscountFinish")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountPrice")
                        .HasColumnName("DiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DiscountStart")
                        .HasColumnName("DiscountStart")
                        .HasColumnType("datetime2");

                    b.Property<int>("GameId")
                        .HasColumnName("GameId")
                        .HasColumnType("int");

                    b.HasKey("DiscountId");

                    b.HasIndex("GameId");

                    b.ToTable("Discount");

                    b.HasData(
                        new
                        {
                            DiscountId = 1,
                            DiscountFinish = new DateTime(2020, 12, 8, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPrice = 19.99m,
                            DiscountStart = new DateTime(2020, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 30
                        },
                        new
                        {
                            DiscountId = 2,
                            DiscountFinish = new DateTime(2020, 12, 8, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPrice = 2.69m,
                            DiscountStart = new DateTime(2020, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 26
                        },
                        new
                        {
                            DiscountId = 3,
                            DiscountFinish = new DateTime(2020, 12, 8, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPrice = 59.99m,
                            DiscountStart = new DateTime(2020, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 19
                        },
                        new
                        {
                            DiscountId = 4,
                            DiscountFinish = new DateTime(2020, 12, 25, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPrice = 11.99m,
                            DiscountStart = new DateTime(2020, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 7
                        },
                        new
                        {
                            DiscountId = 5,
                            DiscountFinish = new DateTime(2020, 12, 25, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPrice = 12.49m,
                            DiscountStart = new DateTime(2020, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 16
                        },
                        new
                        {
                            DiscountId = 6,
                            DiscountFinish = new DateTime(2020, 12, 25, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPrice = 11.59m,
                            DiscountStart = new DateTime(2020, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 5
                        },
                        new
                        {
                            DiscountId = 7,
                            DiscountFinish = new DateTime(2021, 7, 24, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPrice = 59.99m,
                            DiscountStart = new DateTime(2020, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 27
                        },
                        new
                        {
                            DiscountId = 8,
                            DiscountFinish = new DateTime(2021, 7, 24, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPrice = 13.69m,
                            DiscountStart = new DateTime(2020, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 25
                        },
                        new
                        {
                            DiscountId = 9,
                            DiscountFinish = new DateTime(2021, 7, 24, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPrice = 48.99m,
                            DiscountStart = new DateTime(2020, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 18
                        },
                        new
                        {
                            DiscountId = 10,
                            DiscountFinish = new DateTime(2021, 7, 24, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPrice = 14.99m,
                            DiscountStart = new DateTime(2020, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 15
                        },
                        new
                        {
                            DiscountId = 11,
                            DiscountFinish = new DateTime(2021, 7, 24, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPrice = 52.79m,
                            DiscountStart = new DateTime(2020, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 4
                        },
                        new
                        {
                            DiscountId = 12,
                            DiscountFinish = new DateTime(2021, 7, 24, 23, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountPrice = 7.99m,
                            DiscountStart = new DateTime(2020, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GameId = 3
                        });
                });

            modelBuilder.Entity("Sprint.Models.GameImage", b =>
                {
                    b.Property<int>("GameImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GameImageId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameId")
                        .HasColumnName("GameId")
                        .HasColumnType("int");

                    b.Property<int>("ImageType")
                        .HasColumnName("ImageType")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnName("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GameImageId");

                    b.HasIndex("GameId");

                    b.ToTable("GameImage");

                    b.HasData(
                        new
                        {
                            GameImageId = 1,
                            GameId = 1,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/4c22bd444899d3b6047a10b20a2f26db.png"
                        },
                        new
                        {
                            GameImageId = 31,
                            GameId = 1,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/227300/ss_b70d5295ecc738dc2279797ec8351ac0fdf139f4.jpg"
                        },
                        new
                        {
                            GameImageId = 32,
                            GameId = 1,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/227300/ss_2082e17ee1dad2004c48e689a005f8f684f5b645.jpg"
                        },
                        new
                        {
                            GameImageId = 33,
                            GameId = 1,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/227300/ss_68aea6cce2261f8cdd52fe39bc1fceddc783ed69.jpg"
                        },
                        new
                        {
                            GameImageId = 34,
                            GameId = 1,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/227300/ss_cf79030615e1188ed7e31f36c6b4dcf8b5cf4512.jpg"
                        },
                        new
                        {
                            GameImageId = 35,
                            GameId = 1,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/227300/ss_ec04158ea75cfac3ea2703d00ab06cd8dfd4416a.jpg"
                        },
                        new
                        {
                            GameImageId = 36,
                            GameId = 1,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/227300/ss_f30c62166abbbb87b1c4a822f46b538d84978816.jpg"
                        },
                        new
                        {
                            GameImageId = 37,
                            GameId = 1,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/227300/ss_3424d0fd16eaefeeef2d3e601db52dc62dc73c63.jpg"
                        },
                        new
                        {
                            GameImageId = 2,
                            GameId = 2,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/097e232de59f809f5a1cdf88e1240b08.png"
                        },
                        new
                        {
                            GameImageId = 38,
                            GameId = 2,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1239520/ss_02f624e7b929d29632416474c90fc9b046f9e9fc.jpg"
                        },
                        new
                        {
                            GameImageId = 39,
                            GameId = 2,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1239520/ss_b38af388931fd2a652c5849a6d4ef25dbedf4645.jpg"
                        },
                        new
                        {
                            GameImageId = 40,
                            GameId = 2,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1239520/ss_1478e30c80afd1ce72f6c6887691b76769130666.jpg"
                        },
                        new
                        {
                            GameImageId = 41,
                            GameId = 2,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1239520/ss_f410761ffd30001b88a964356abad036a5ece574.jpg"
                        },
                        new
                        {
                            GameImageId = 3,
                            GameId = 3,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/b16a06a5ea94028944a81ad5bbdbb8ca.png"
                        },
                        new
                        {
                            GameImageId = 42,
                            GameId = 3,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/219740/ss_09bb6bdce4fa085c2c4a9a8f48ea52d3051b44bc.jpg"
                        },
                        new
                        {
                            GameImageId = 43,
                            GameId = 3,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/219740/ss_26b6414b4ae07cfc2e2d15bd6ff315a4678f00f3.jpg"
                        },
                        new
                        {
                            GameImageId = 44,
                            GameId = 3,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/219740/ss_3d32a04e77363f3c8179a319de6f90ac1b8b2e0e.jpg"
                        },
                        new
                        {
                            GameImageId = 45,
                            GameId = 3,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/219740/ss_0167fbdf9d30407734baf3ab3b08213945738166.jpg"
                        },
                        new
                        {
                            GameImageId = 46,
                            GameId = 3,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/219740/ss_38d4d1b21050fc4b3978fcf65c909260d3673fb7.jpg"
                        },
                        new
                        {
                            GameImageId = 47,
                            GameId = 3,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/219740/ss_1d3d9b7d9d752666feb9853215c118104816eee2.jpg"
                        },
                        new
                        {
                            GameImageId = 4,
                            GameId = 4,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/7e04e496f1cf3896708f48127a7b65de.png"
                        },
                        new
                        {
                            GameImageId = 48,
                            GameId = 4,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/397540/ss_9868ee40f39749a4c8222502cf86525ee32c1bef.jpg"
                        },
                        new
                        {
                            GameImageId = 49,
                            GameId = 4,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/397540/ss_624638e46ed590d4bb1835558a5ab0981f7baadd.jpg"
                        },
                        new
                        {
                            GameImageId = 50,
                            GameId = 4,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/397540/ss_3531d9f91265d94fc06f6587eba1ca49f2c423d1.jpg"
                        },
                        new
                        {
                            GameImageId = 51,
                            GameId = 4,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/397540/ss_6f1836277ffe8733503a9446d51b8c7eb3d20d5f.jpg"
                        },
                        new
                        {
                            GameImageId = 52,
                            GameId = 4,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/397540/ss_bd8b719de92cfc9e65cd96d5da74426918964291.jpg"
                        },
                        new
                        {
                            GameImageId = 53,
                            GameId = 4,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/397540/ss_f983c0c1cc566b8ca21a6c45e6f044b57aff0f0f.jpg"
                        },
                        new
                        {
                            GameImageId = 54,
                            GameId = 4,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/397540/ss_bb22ac18c1db1a87d779db0c3fb480eb1ce79f0e.jpg"
                        },
                        new
                        {
                            GameImageId = 5,
                            GameId = 5,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/6be910cdb73c47cb973a944c03f5c7b1.png"
                        },
                        new
                        {
                            GameImageId = 55,
                            GameId = 5,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/203160/ss_65861a8ea2efcb01fca8aa4b1233663bb053ab54.jpg"
                        },
                        new
                        {
                            GameImageId = 56,
                            GameId = 5,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/203160/ss_c93f9a97f2fd890f21c829cf8781850484eec7f3.jpg"
                        },
                        new
                        {
                            GameImageId = 57,
                            GameId = 5,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/203160/ss_846fd1166a03b1d3147618aaba1ff7ef4477085d.jpg"
                        },
                        new
                        {
                            GameImageId = 58,
                            GameId = 5,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/203160/ss_8f34a87469f3a0c73049cbd0469bdff6e3d22713.jpg"
                        },
                        new
                        {
                            GameImageId = 59,
                            GameId = 5,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/203160/ss_cd920308517efb19c11b44e251af89e40fb412d5.jpg"
                        },
                        new
                        {
                            GameImageId = 60,
                            GameId = 5,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/203160/ss_b49a25cb879b6dbaa6f851eae3b5bf6d3fc04478.jpg"
                        },
                        new
                        {
                            GameImageId = 6,
                            GameId = 6,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/5248e5118c84beea359b6ea385393661.png"
                        },
                        new
                        {
                            GameImageId = 61,
                            GameId = 6,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/22490/ss_ec8a28942fcb5cb15718f949ab81124932a5084d.jpg"
                        },
                        new
                        {
                            GameImageId = 62,
                            GameId = 6,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/22490/ss_ac7dbb6b5d1353ec1e66110fe652883b957a70e3.jpg"
                        },
                        new
                        {
                            GameImageId = 63,
                            GameId = 6,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/22490/ss_909a95f11266fed10eba4282b36608a9e731a1c5.jpg"
                        },
                        new
                        {
                            GameImageId = 64,
                            GameId = 6,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/22490/ss_b898b51f69d795b804374bb6396c7c24b23545d3.jpg"
                        },
                        new
                        {
                            GameImageId = 7,
                            GameId = 7,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/a3171cc0f610fdfdf460831fb25a3dc7.png"
                        },
                        new
                        {
                            GameImageId = 65,
                            GameId = 7,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/346010/ss_922d27a19a98dd259e23b6f82901728da1e91bb8.jpg"
                        },
                        new
                        {
                            GameImageId = 66,
                            GameId = 7,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/346010/ss_cbf706e7a6860429d148e49220dddf7ecac20cf7.jpg"
                        },
                        new
                        {
                            GameImageId = 67,
                            GameId = 7,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/346010/ss_62f421579193a15026c439f6c1685a28017b84ba.jpg"
                        },
                        new
                        {
                            GameImageId = 68,
                            GameId = 7,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/346010/ss_e7dc933b7e6a321f6be37367fce68a39dac26d16.jpg"
                        },
                        new
                        {
                            GameImageId = 69,
                            GameId = 7,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/346010/ss_f280252d02632345eeba8877ece485c8582dd30d.jpg"
                        },
                        new
                        {
                            GameImageId = 70,
                            GameId = 7,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/346010/ss_9fe75fccba08bfb18338f8833b030775a30b3685.jpg"
                        },
                        new
                        {
                            GameImageId = 71,
                            GameId = 7,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/346010/ss_4c0020e484b09452631df8cfc42a97d9d1ddb0c1.jpg"
                        },
                        new
                        {
                            GameImageId = 8,
                            GameId = 8,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/5e26566dffe850373e9a5121703034a1.png"
                        },
                        new
                        {
                            GameImageId = 72,
                            GameId = 8,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/220200/ss_c5b19aad79ad37ba36708f22742c1bf81f9220ca.jpg"
                        },
                        new
                        {
                            GameImageId = 73,
                            GameId = 8,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/220200/ss_f258c8ebef5e2bf47a2feca529a2cd3f864cfbb0.jpg"
                        },
                        new
                        {
                            GameImageId = 74,
                            GameId = 8,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/220200/ss_f93547d532f3b0b19dbc23a1500fd313f3619e03.jpg"
                        },
                        new
                        {
                            GameImageId = 75,
                            GameId = 8,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/220200/ss_9fc2032db736a2a9919aba739566a8353c2cd3cb.jpg"
                        },
                        new
                        {
                            GameImageId = 9,
                            GameId = 9,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/c1537c9ed39baee3476c6fdd666b5fd8.png"
                        },
                        new
                        {
                            GameImageId = 76,
                            GameId = 9,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/17450/ss_c79860e70c98e653453f4dc227df5820d9f841ca.jpg"
                        },
                        new
                        {
                            GameImageId = 77,
                            GameId = 9,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/17450/ss_082575907197c03f4e27816f1fca1bd7d5c97848.jpg"
                        },
                        new
                        {
                            GameImageId = 78,
                            GameId = 9,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/17450/ss_066491f3039cd9919a8b1d3538d33100fe87dfca.jpg"
                        },
                        new
                        {
                            GameImageId = 79,
                            GameId = 9,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/17450/ss_7d9dc6d7c7362bca257e035e2fe161c68005b9f2.jpg"
                        },
                        new
                        {
                            GameImageId = 10,
                            GameId = 10,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/84b3f2becbf70a03239d7fae55dcaa40.png"
                        },
                        new
                        {
                            GameImageId = 80,
                            GameId = 10,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/220240/ss_a85a01aae90c8ca69a05d32a1196ffaf6d943bd7.jpg"
                        },
                        new
                        {
                            GameImageId = 81,
                            GameId = 10,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/220240/ss_6e7911d3622f3a801aeea1c2f8418f0f22880bb0.jpg"
                        },
                        new
                        {
                            GameImageId = 82,
                            GameId = 10,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/220240/ss_c5c810244ba6dd899de44121b37d87fad2621d4c.jpg"
                        },
                        new
                        {
                            GameImageId = 83,
                            GameId = 10,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/220240/ss_842bfdeb44368babd55ad93af1cbbf560f9fb9a1.jpg"
                        },
                        new
                        {
                            GameImageId = 84,
                            GameId = 10,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/220240/ss_eed79518c510b7b8ce6fce9d1c350bfcea530993.jpg"
                        },
                        new
                        {
                            GameImageId = 85,
                            GameId = 10,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/220240/ss_83af36773eb0393144cfefa80ceb6baf5c608cf7.jpg"
                        },
                        new
                        {
                            GameImageId = 86,
                            GameId = 10,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/220240/ss_0c08ce5d7f63fd8cee404426f6d083d93105a924.jpg"
                        },
                        new
                        {
                            GameImageId = 11,
                            GameId = 11,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/1051f72ed869290c51ee34a72b1d01df.png"
                        },
                        new
                        {
                            GameImageId = 87,
                            GameId = 11,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/233270/ss_602b7c88ab725ccabfd8ad7c94fb536875c329ad.jpg"
                        },
                        new
                        {
                            GameImageId = 88,
                            GameId = 11,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/233270/ss_3210874e1d6e20965cc9c76ac2d7e899ef2b0b9f.jpg"
                        },
                        new
                        {
                            GameImageId = 89,
                            GameId = 11,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/233270/ss_4670702422e948a9666c29814ac6cfdb941c5a4a.jpg"
                        },
                        new
                        {
                            GameImageId = 90,
                            GameId = 11,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/233270/ss_040958f3839e7d1c3ae50c76200d0891c5ca6883.jpg"
                        },
                        new
                        {
                            GameImageId = 12,
                            GameId = 12,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/6db2fc0f9848c8830f2c5ad73e78ea75.png"
                        },
                        new
                        {
                            GameImageId = 13,
                            GameId = 13,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/2a574bcb25a0ae1faad7c630370e6234.png"
                        },
                        new
                        {
                            GameImageId = 14,
                            GameId = 14,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/5549f6da5ec3b191b672e682e4735d71.png"
                        },
                        new
                        {
                            GameImageId = 15,
                            GameId = 15,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/3aa4cb2017fe681acd92bbea6b9f6015.png"
                        },
                        new
                        {
                            GameImageId = 91,
                            GameId = 15,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/271590/ss_bb2ee3b9b48a60857873192cfff10546e01d4a86.jpg"
                        },
                        new
                        {
                            GameImageId = 92,
                            GameId = 15,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/271590/ss_cd721eb1856f0dd3b820e4e998c3b5fe7e7c9b4e.jpg"
                        },
                        new
                        {
                            GameImageId = 93,
                            GameId = 15,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/271590/ss_f64515607fd627aa9436be3b15fdcb9e1c89bb19.jpg"
                        },
                        new
                        {
                            GameImageId = 94,
                            GameId = 15,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/271590/ss_95a1f04eb687eae71478c0c5ba644da57e10f215.jpg"
                        },
                        new
                        {
                            GameImageId = 16,
                            GameId = 16,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/5f65c233d57a4b31b1e4edbaa79bf6ca.png"
                        },
                        new
                        {
                            GameImageId = 95,
                            GameId = 16,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/433340/ss_5339a74c4563d40a1d8a5638db2a9ed59c5b883b.jpg"
                        },
                        new
                        {
                            GameImageId = 96,
                            GameId = 16,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/433340/ss_d923566424cee1c6d82ccde7336b02057d3409fc.jpg"
                        },
                        new
                        {
                            GameImageId = 97,
                            GameId = 16,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/433340/ss_633faaacb74e2da5baa356e0f18f9f73e777c4d2.jpg"
                        },
                        new
                        {
                            GameImageId = 98,
                            GameId = 16,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/433340/ss_e43a384a5d5ab9bcb943423c1e264a54ce840c43.jpg"
                        },
                        new
                        {
                            GameImageId = 99,
                            GameId = 16,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/433340/ss_72a4d284ccc4535d23ba4e12752b8e5a3939b88e.jpg"
                        },
                        new
                        {
                            GameImageId = 100,
                            GameId = 16,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/433340/ss_7dde72f87afe373d4624f49bf81575f8aa2a80fd.jpg"
                        },
                        new
                        {
                            GameImageId = 101,
                            GameId = 16,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/433340/ss_2e80c1d9b6f0f6bfdbbff18b84baca2d1794cd7c.jpg"
                        },
                        new
                        {
                            GameImageId = 17,
                            GameId = 17,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/ea3a48c74a9efb9a08635fe7990347cc.png"
                        },
                        new
                        {
                            GameImageId = 102,
                            GameId = 17,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/252950/ss_0ccc388fb5712016814e66dfa712285d13529bbc.jpg"
                        },
                        new
                        {
                            GameImageId = 103,
                            GameId = 17,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/252950/ss_868ba56dd81b7622bd9ba7f878fd143d0900bcfd.jpg"
                        },
                        new
                        {
                            GameImageId = 104,
                            GameId = 17,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/252950/ss_ba4f48d62ce18649310c16d11b80c33003c39886.jpg"
                        },
                        new
                        {
                            GameImageId = 105,
                            GameId = 17,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/252950/ss_e8d08712cfffe7ec54889f12588c2c150537294e.jpg"
                        },
                        new
                        {
                            GameImageId = 18,
                            GameId = 18,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/884738b4332ababd678ca505f4e04f4d.png"
                        },
                        new
                        {
                            GameImageId = 106,
                            GameId = 18,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/976310/ss_8f3f4ef12a5cfae47d8e768778c329f17ee8b320.jpg"
                        },
                        new
                        {
                            GameImageId = 107,
                            GameId = 18,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/976310/ss_25db57e715957f9673a69723867942f79b8357d9.jpg"
                        },
                        new
                        {
                            GameImageId = 108,
                            GameId = 18,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/976310/ss_5c4f1ad866b43b0d2aa18400216eb4e6168357b4.jpg"
                        },
                        new
                        {
                            GameImageId = 109,
                            GameId = 18,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/976310/ss_5b88f071939e32c790dd9e84890d9c197956a7be.jpg"
                        },
                        new
                        {
                            GameImageId = 19,
                            GameId = 19,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/2da535ad78bb2e93aa448b1a4a61134e.png"
                        },
                        new
                        {
                            GameImageId = 20,
                            GameId = 20,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/cb0fb5b71dd8266417731afb0e7a0864.png"
                        },
                        new
                        {
                            GameImageId = 21,
                            GameId = 21,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/f5e083092550d2f93898e9829e677e39.png"
                        },
                        new
                        {
                            GameImageId = 110,
                            GameId = 21,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1085660/ss_7fcc82f468fcf8278c7ffa95cebf949bfc6845fc.jpg"
                        },
                        new
                        {
                            GameImageId = 111,
                            GameId = 21,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1085660/ss_d923711c0eb833b1df8607fa3df4dcebbe470cf2.jpg"
                        },
                        new
                        {
                            GameImageId = 112,
                            GameId = 21,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1085660/ss_c142f5078ace9f5e2eb2c80aa3bf768e156b4ee9.jpg"
                        },
                        new
                        {
                            GameImageId = 113,
                            GameId = 21,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1085660/ss_a9642404e586be28f856e8f02d038828f691a5ba.jpg"
                        },
                        new
                        {
                            GameImageId = 22,
                            GameId = 22,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/56c12a4512e84416de450db11ab040c3.png"
                        },
                        new
                        {
                            GameImageId = 114,
                            GameId = 22,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/306130/ss_c1cdae9879550709486774eed3a2760d18955349.jpg"
                        },
                        new
                        {
                            GameImageId = 115,
                            GameId = 22,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/306130/ss_16688139333e39593af0eccc77342165eacae0d0.jpg"
                        },
                        new
                        {
                            GameImageId = 116,
                            GameId = 22,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/306130/ss_da66e194128088e46a5ecad2af455ae2ebe84be0.jpg"
                        },
                        new
                        {
                            GameImageId = 117,
                            GameId = 22,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/306130/ss_48be777780be9babf0ffb6c77766d5b0776adc1f.jpg"
                        },
                        new
                        {
                            GameImageId = 23,
                            GameId = 23,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/4a8520defd77a137222438d72ed7afd2.png"
                        },
                        new
                        {
                            GameImageId = 118,
                            GameId = 23,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/256330/ss_57b07abe4e9a1165da440a4b798f4383e560a2f7.jpg"
                        },
                        new
                        {
                            GameImageId = 119,
                            GameId = 23,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/256330/ss_dc30c74424a74426194c924a6326e8ab9d2e6dc4.jpg"
                        },
                        new
                        {
                            GameImageId = 120,
                            GameId = 23,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/256330/ss_ff04f7cbf0ad72b618ab6e17f6af2a424cbf5eaa.jpg"
                        },
                        new
                        {
                            GameImageId = 121,
                            GameId = 23,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/256330/ss_2ca3198a526321a83deac259ba02f8690f64db88.jpg"
                        },
                        new
                        {
                            GameImageId = 24,
                            GameId = 24,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/ee955e252af3c85e66e15864e31174fe.png"
                        },
                        new
                        {
                            GameImageId = 122,
                            GameId = 24,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1262540/ss_76eb69e48a6a0cc256603c2aa0844e5e6d5c8168.jpg"
                        },
                        new
                        {
                            GameImageId = 123,
                            GameId = 24,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1262540/ss_e720137320c342a6664e195bc875613f338397ca.jpg"
                        },
                        new
                        {
                            GameImageId = 124,
                            GameId = 24,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1262540/ss_700fb95c4cfc073b2e0640dc5049a0df1c2940f4.jpg"
                        },
                        new
                        {
                            GameImageId = 125,
                            GameId = 24,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1262540/ss_7da80363f25c7d7ccc95e7bfdc5d8091e0cea77e.jpg"
                        },
                        new
                        {
                            GameImageId = 25,
                            GameId = 25,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/c967fb654df41177901d1f5f135bf9e6.png"
                        },
                        new
                        {
                            GameImageId = 126,
                            GameId = 25,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/245620/ss_d254f02db9453c6931b0850a62341d8651329095.jpg"
                        },
                        new
                        {
                            GameImageId = 127,
                            GameId = 25,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/245620/ss_b81a5412d6d1edb80b7f90899a63c42043f5abcb.jpg"
                        },
                        new
                        {
                            GameImageId = 128,
                            GameId = 25,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/245620/ss_48bb8b8874175b55a0661d242eec349cdaf5bad0.jpg"
                        },
                        new
                        {
                            GameImageId = 129,
                            GameId = 25,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/245620/ss_ca56bd7c7cf60337f169d29115aa3f761422f551.jpg"
                        },
                        new
                        {
                            GameImageId = 26,
                            GameId = 26,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/75c0aa52af187c4cd20744efafa1c7c7.png"
                        },
                        new
                        {
                            GameImageId = 130,
                            GameId = 26,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/945360/ss_c80d2f3fab624b18d9531adc6957767a7fede100.jpg"
                        },
                        new
                        {
                            GameImageId = 131,
                            GameId = 26,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/945360/ss_649e19ff657fa518d4c2b45bed7ffdc4264a4b3a.jpg"
                        },
                        new
                        {
                            GameImageId = 132,
                            GameId = 26,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/945360/ss_7ccc894b8f95091f608fa012450549091cce2423.jpg"
                        },
                        new
                        {
                            GameImageId = 133,
                            GameId = 26,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/945360/ss_943c487e302fa5fc303d59e45a03218e25a2a59c.jpg"
                        },
                        new
                        {
                            GameImageId = 27,
                            GameId = 27,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/41b28a11da13a0384a9b75f95244e8e8.png"
                        },
                        new
                        {
                            GameImageId = 134,
                            GameId = 27,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1174180/ss_66b553f4c209476d3e4ce25fa4714002cc914c4f.jpg"
                        },
                        new
                        {
                            GameImageId = 135,
                            GameId = 27,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1174180/ss_bac60bacbf5da8945103648c08d27d5e202444ca.jpg"
                        },
                        new
                        {
                            GameImageId = 136,
                            GameId = 27,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1174180/ss_668dafe477743f8b50b818d5bbfcec669e9ba93e.jpg"
                        },
                        new
                        {
                            GameImageId = 137,
                            GameId = 27,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1174180/ss_4ce07ae360b166f0f650e9a895a3b4b7bf15e34f.jpg"
                        },
                        new
                        {
                            GameImageId = 138,
                            GameId = 27,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1174180/ss_d1a8f5a69155c3186c65d1da90491fcfd43663d9.jpg"
                        },
                        new
                        {
                            GameImageId = 28,
                            GameId = 28,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/c9ee6a825655d889ae6a84bde2802bc2.png"
                        },
                        new
                        {
                            GameImageId = 139,
                            GameId = 28,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/289070/ss_36c63ebeb006b246cb740fdafeb41bb20e3b330d.jpg"
                        },
                        new
                        {
                            GameImageId = 140,
                            GameId = 28,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/289070/ss_cf53258cb8c4d283e52cf8dce3edf8656f83adc6.jpg"
                        },
                        new
                        {
                            GameImageId = 141,
                            GameId = 28,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/289070/ss_f501156a69223131ee8b12452f3003698334e964.jpg"
                        },
                        new
                        {
                            GameImageId = 142,
                            GameId = 28,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/289070/ss_2be9153a2633e671c283e2dbcec64e2e4543f66f.jpg"
                        },
                        new
                        {
                            GameImageId = 29,
                            GameId = 29,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/5ec5d5702a083583b268f32dde14b419.png"
                        },
                        new
                        {
                            GameImageId = 143,
                            GameId = 29,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1151640/ss_d09106060fb7de8bf342c23df18b14debc8a15a3.jpg"
                        },
                        new
                        {
                            GameImageId = 144,
                            GameId = 29,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1151640/ss_271f850eec3f96b22aa17be35b948268e0771c7f.jpg"
                        },
                        new
                        {
                            GameImageId = 145,
                            GameId = 29,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1151640/ss_15f5759c441e4e5f51e1a8ee333e4ab9df9aa783.jpg"
                        },
                        new
                        {
                            GameImageId = 146,
                            GameId = 29,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/1151640/ss_9db45aa04e8c8b5043b479f42ed36296bfc3a918.jpg"
                        },
                        new
                        {
                            GameImageId = 30,
                            GameId = 30,
                            ImageType = 1,
                            ImageURL = "https://cdn.steamgriddb.com/grid/60c60a4ffa03bde6f8c83533d465ef5c.png"
                        },
                        new
                        {
                            GameImageId = 147,
                            GameId = 30,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/377160/ss_f7861bd71e6c0c218d8ff69fb1c626aec0d187cf.jpg"
                        },
                        new
                        {
                            GameImageId = 148,
                            GameId = 30,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/377160/ss_c310f858e6a7b02ffa21db984afb0dd1b24c1423.jpg"
                        },
                        new
                        {
                            GameImageId = 149,
                            GameId = 30,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/377160/ss_6834be966451a9b0f12eb4f68bfb0853ea0b7267.jpg"
                        },
                        new
                        {
                            GameImageId = 150,
                            GameId = 30,
                            ImageType = 0,
                            ImageURL = "https://cdn.cloudflare.steamstatic.com/steam/apps/377160/ss_cd83d21b82e4c4e9a6d76edc98a8c2b70b1b5e9d.jpg"
                        });
                });

            modelBuilder.Entity("Sprint.Models.GameType", b =>
                {
                    b.Property<int>("GameTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("GameTypeId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(32)")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.HasKey("GameTypeId");

                    b.ToTable("GameType");

                    b.HasData(
                        new
                        {
                            GameTypeId = 1,
                            Name = "Action"
                        },
                        new
                        {
                            GameTypeId = 2,
                            Name = "Action-Adventure"
                        },
                        new
                        {
                            GameTypeId = 3,
                            Name = "Adventure"
                        },
                        new
                        {
                            GameTypeId = 4,
                            Name = "Role-Playing"
                        },
                        new
                        {
                            GameTypeId = 5,
                            Name = "Simulation"
                        },
                        new
                        {
                            GameTypeId = 6,
                            Name = "Strategy"
                        },
                        new
                        {
                            GameTypeId = 7,
                            Name = "Sports"
                        },
                        new
                        {
                            GameTypeId = 8,
                            Name = "MMO"
                        },
                        new
                        {
                            GameTypeId = 9,
                            Name = "Sandbox"
                        });
                });

            modelBuilder.Entity("Sprint.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrderId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BillingAddressId")
                        .HasColumnName("BillingAddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnName("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnName("OrderNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShippingAddressId")
                        .HasColumnName("ShippingAddressId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WalletId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("BillingAddressId");

                    b.HasIndex("ShippingAddressId");

                    b.HasIndex("UserId");

                    b.HasIndex("WalletId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Sprint.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OrderItemId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnName("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("OwnerUserId")
                        .HasColumnName("OwnerUserId")
                        .HasColumnType("int");

                    b.Property<bool>("PhysicallyOwned")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PhysicallyOwned")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("OwnerUserId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("Sprint.Models.PlatformType", b =>
                {
                    b.Property<int>("PlatformTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PlatformTypeId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(64)")
                        .HasMaxLength(64)
                        .IsUnicode(false);

                    b.HasKey("PlatformTypeId");

                    b.ToTable("PlatformType");

                    b.HasData(
                        new
                        {
                            PlatformTypeId = 1,
                            Name = "Other"
                        },
                        new
                        {
                            PlatformTypeId = 2,
                            Name = "Xbox"
                        },
                        new
                        {
                            PlatformTypeId = 3,
                            Name = "Xbox 360"
                        },
                        new
                        {
                            PlatformTypeId = 4,
                            Name = "Xbox One"
                        },
                        new
                        {
                            PlatformTypeId = 5,
                            Name = "Xbox Series"
                        },
                        new
                        {
                            PlatformTypeId = 6,
                            Name = "PlayStation"
                        },
                        new
                        {
                            PlatformTypeId = 7,
                            Name = "PlayStation 2"
                        },
                        new
                        {
                            PlatformTypeId = 8,
                            Name = "PlayStation 3"
                        },
                        new
                        {
                            PlatformTypeId = 9,
                            Name = "PlayStation 4"
                        },
                        new
                        {
                            PlatformTypeId = 10,
                            Name = "PlayStation 5"
                        },
                        new
                        {
                            PlatformTypeId = 11,
                            Name = "Nintendo DS"
                        },
                        new
                        {
                            PlatformTypeId = 12,
                            Name = "Nintendo 3DS"
                        },
                        new
                        {
                            PlatformTypeId = 13,
                            Name = "Wii"
                        },
                        new
                        {
                            PlatformTypeId = 14,
                            Name = "Wii U"
                        },
                        new
                        {
                            PlatformTypeId = 15,
                            Name = "Switch"
                        },
                        new
                        {
                            PlatformTypeId = 16,
                            Name = "PC Windows"
                        },
                        new
                        {
                            PlatformTypeId = 17,
                            Name = "PC Mac"
                        },
                        new
                        {
                            PlatformTypeId = 18,
                            Name = "PC Linux"
                        },
                        new
                        {
                            PlatformTypeId = 19,
                            Name = "PC Other"
                        });
                });

            modelBuilder.Entity("Sprint.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ReviewId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GameId")
                        .HasColumnName("GameId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnName("Rating")
                        .HasColumnType("int");

                    b.Property<string>("ReviewContent")
                        .IsRequired()
                        .HasColumnName("ReviewContent")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("UserId")
                        .HasColumnName("UserId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId", "GameId")
                        .IsUnique();

                    b.ToTable("Review");
                });

            modelBuilder.Entity("Sprint.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "58d1c40a-90b4-47b1-9f00-753e2cd44458",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "8f0b356a-83d0-4160-b258-26f0849249d2",
                            Name = "Member",
                            NormalizedName = "MEMBER"
                        });
                });

            modelBuilder.Entity("Sprint.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AccountNum")
                        .IsRequired()
                        .HasColumnName("AccountNum")
                        .HasColumnType("varchar(36)")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnName("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasColumnType("varchar(128)")
                        .HasMaxLength(128)
                        .IsUnicode(false);

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("PreferredGameTypeId")
                        .HasColumnName("PreferredGameTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("PreferredPlatformTypeId")
                        .HasColumnName("PreferredPlatformId")
                        .HasColumnType("int");

                    b.Property<bool>("ReceivePromotionalEmails")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ReceivePromotionalEmails")
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<int>("WishlistVisibility")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WishlistVisibility")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("PreferredGameTypeId");

                    b.HasIndex("PreferredPlatformTypeId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            AccountNum = "54331bd3-78bf-470f-b1a7-13b9079f0e3a",
                            BirthDate = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "7207bc29-df76-4da9-b18f-5d835603eab1",
                            Email = "admin@admin.com",
                            EmailConfirmed = true,
                            Gender = "Other",
                            LockoutEnabled = false,
                            Name = "Admin",
                            NormalizedEmail = "ADMIN@ADMIN.COM",
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEMgQJTBX5qXc0YlaEYl4wVsZrDGxfm/7UU1as7smMUlyz0SadwQWTFlh78oM9k+Lhg==",
                            PhoneNumber = "555-555-5555",
                            PhoneNumberConfirmed = false,
                            ReceivePromotionalEmails = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "admin",
                            WishlistVisibility = 0
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            AccountNum = "96ecd5bd-c2a9-498c-b9dd-d6f67c673beb",
                            BirthDate = new DateTime(1970, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ConcurrencyStamp = "59d6e6aa-83e8-42fd-a287-1b7025098000",
                            Email = "user@user.com",
                            EmailConfirmed = true,
                            Gender = "Other",
                            LockoutEnabled = false,
                            Name = "User",
                            NormalizedEmail = "USER@USER.COM",
                            NormalizedUserName = "USER",
                            PasswordHash = "AQAAAAEAACcQAAAAEJmy00MyfmzFoo5RAhq1X5LI/IsP7S0JEhJoDrRjmFQRerB7vEhIptiTEMbs8QRKgA==",
                            PhoneNumber = "555-555-5555",
                            PhoneNumberConfirmed = false,
                            ReceivePromotionalEmails = false,
                            SecurityStamp = "",
                            TwoFactorEnabled = false,
                            UserName = "user",
                            WishlistVisibility = 0
                        });
                });

            modelBuilder.Entity("Sprint.Models.UserGameWishlist", b =>
                {
                    b.Property<int>("UserGameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserGameId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("AddedOn")
                        .IsRequired()
                        .HasColumnName("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("GameId")
                        .HasColumnName("GameId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnName("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserGameId");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId", "GameId")
                        .IsUnique();

                    b.ToTable("UserGameWishlist");
                });

            modelBuilder.Entity("Sprint.Models.UserRelationship", b =>
                {
                    b.Property<int>("UserRelationshipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UserRelationshipId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RelatedUserId")
                        .HasColumnName("RelatedUser")
                        .HasColumnType("int");

                    b.Property<int>("RelatingUserId")
                        .HasColumnName("RelatingUser")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Type")
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("UserRelationshipId");

                    b.HasIndex("RelatedUserId");

                    b.HasIndex("RelatingUserId", "RelatedUserId")
                        .IsUnique();

                    b.ToTable("UserRelationship");
                });

            modelBuilder.Entity("Sprint.Models.Wallet", b =>
                {
                    b.Property<int>("WalletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WalletId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnName("CardNumber")
                        .HasColumnType("nvarchar(16)")
                        .HasMaxLength(16);

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasColumnName("Month")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int>("UserId")
                        .HasColumnName("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnName("Year")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("WalletId");

                    b.HasIndex("UserId");

                    b.ToTable("Wallet");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Sprint.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Sprint.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Sprint.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Sprint.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sprint.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Sprint.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sprint.Models.Address", b =>
                {
                    b.HasOne("Sprint.Models.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Address_User")
                        .IsRequired();
                });

            modelBuilder.Entity("Sprint.Models.CartGame", b =>
                {
                    b.HasOne("Sprint.Models.User", "CartUser")
                        .WithMany("CartItems")
                        .HasForeignKey("CartUserId")
                        .HasConstraintName("FK_CartGame_CartUser")
                        .IsRequired();

                    b.HasOne("Sprint.Models.Game", "Game")
                        .WithMany("CartItems")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK_CartGame_Game")
                        .IsRequired();

                    b.HasOne("Sprint.Models.User", "ReceivingUser")
                        .WithMany("ReceivingCartItems")
                        .HasForeignKey("ReceivingUserId")
                        .HasConstraintName("FK_CartGame_ReceivingUser")
                        .IsRequired();
                });

            modelBuilder.Entity("Sprint.Models.Game", b =>
                {
                    b.HasOne("Sprint.Models.GameType", "GameType")
                        .WithMany("Games")
                        .HasForeignKey("GameTypeId")
                        .HasConstraintName("FK_Game_GameType")
                        .IsRequired();
                });

            modelBuilder.Entity("Sprint.Models.GameDiscount", b =>
                {
                    b.HasOne("Sprint.Models.Game", "Game")
                        .WithMany("Discounts")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK_Game_Discount")
                        .IsRequired();
                });

            modelBuilder.Entity("Sprint.Models.GameImage", b =>
                {
                    b.HasOne("Sprint.Models.Game", "Game")
                        .WithMany("GameImages")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK_GameImage_Game")
                        .IsRequired();
                });

            modelBuilder.Entity("Sprint.Models.Order", b =>
                {
                    b.HasOne("Sprint.Models.Address", "BillingAddress")
                        .WithMany("BilledOrders")
                        .HasForeignKey("BillingAddressId")
                        .HasConstraintName("FK_Order_BilledAddress");

                    b.HasOne("Sprint.Models.Address", "ShippingAddress")
                        .WithMany("ShippedOrders")
                        .HasForeignKey("ShippingAddressId")
                        .HasConstraintName("FK_Order_ShippedAddress");

                    b.HasOne("Sprint.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Order_User")
                        .IsRequired();

                    b.HasOne("Sprint.Models.Wallet", "Wallet")
                        .WithMany()
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Sprint.Models.OrderItem", b =>
                {
                    b.HasOne("Sprint.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_OrderItem_Order")
                        .IsRequired();

                    b.HasOne("Sprint.Models.User", "OwnerUser")
                        .WithMany("OwnedItems")
                        .HasForeignKey("OwnerUserId")
                        .HasConstraintName("FK_OrderItem_OwnerUser")
                        .IsRequired();
                });

            modelBuilder.Entity("Sprint.Models.Review", b =>
                {
                    b.HasOne("Sprint.Models.Game", "Game")
                        .WithMany("Reviews")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK_Review_Game")
                        .IsRequired();

                    b.HasOne("Sprint.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Review_User")
                        .IsRequired();
                });

            modelBuilder.Entity("Sprint.Models.User", b =>
                {
                    b.HasOne("Sprint.Models.GameType", null)
                        .WithMany()
                        .HasForeignKey("PreferredGameTypeId")
                        .HasConstraintName("FK_User_GameType");

                    b.HasOne("Sprint.Models.PlatformType", null)
                        .WithMany()
                        .HasForeignKey("PreferredPlatformTypeId")
                        .HasConstraintName("FK_User_PlatformType");
                });

            modelBuilder.Entity("Sprint.Models.UserGameWishlist", b =>
                {
                    b.HasOne("Sprint.Models.Game", "Game")
                        .WithMany("Wishlists")
                        .HasForeignKey("GameId")
                        .HasConstraintName("FK_Wishlist_Game")
                        .IsRequired();

                    b.HasOne("Sprint.Models.User", "User")
                        .WithMany("Wishlists")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Wishlist_User")
                        .IsRequired();
                });

            modelBuilder.Entity("Sprint.Models.UserRelationship", b =>
                {
                    b.HasOne("Sprint.Models.User", "RelatedUser")
                        .WithMany("RelatedRelationships")
                        .HasForeignKey("RelatedUserId")
                        .HasConstraintName("FK_User_Related")
                        .IsRequired();

                    b.HasOne("Sprint.Models.User", "RelatingUser")
                        .WithMany("RelatingRelationships")
                        .HasForeignKey("RelatingUserId")
                        .HasConstraintName("FK_User_Relating")
                        .IsRequired();
                });

            modelBuilder.Entity("Sprint.Models.Wallet", b =>
                {
                    b.HasOne("Sprint.Models.User", "User")
                        .WithMany("Wallets")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Wallet_User")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
